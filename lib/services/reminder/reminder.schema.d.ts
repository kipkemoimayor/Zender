import type { Static } from '@feathersjs/typebox';
import type { HookContext } from '../../declarations';
export declare const reminderSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TNumber;
    type: import("@sinclair/typebox").TInteger;
    sent: import("@sinclair/typebox").TBoolean;
    message: import("@sinclair/typebox").TString<string>;
    scheduledAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<"date-time">>;
    device: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TNumber;
        imei: import("@sinclair/typebox").TString<string>;
        status: import("@sinclair/typebox").TAny;
        loanId: import("@sinclair/typebox").TInteger;
        loan: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TNumber;
            accountId: import("@sinclair/typebox").TString<string>;
            firstRepaymentDate: import("@sinclair/typebox").TAny;
            loanName: import("@sinclair/typebox").TString<string>;
            status: import("@sinclair/typebox").TString<string>;
            mambuImei: import("@sinclair/typebox").TString<string>;
            clientId: import("@sinclair/typebox").TInteger;
            client: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
                id: import("@sinclair/typebox").TNumber;
                fullName: import("@sinclair/typebox").TString<string>;
                idNumber: import("@sinclair/typebox").TString<string>;
                emailAddress: import("@sinclair/typebox").TString<"email">;
                phoneNumber: import("@sinclair/typebox").TString<string>;
                location: import("@sinclair/typebox").TString<string>;
                status: import("@sinclair/typebox").TNumber;
                createdAt: import("@sinclair/typebox").TString<string>;
                updatedAt: import("@sinclair/typebox").TString<string>;
            }>>;
            createdAt: import("@sinclair/typebox").TString<string>;
            updatedAt: import("@sinclair/typebox").TString<string>;
            retry: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            encodedKey: import("@sinclair/typebox").TString<string>;
            mambuSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            mambuSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<"date-time">>;
            daysRemaining: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            paid: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            paidOff: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            daysToNextInstallment: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        }>>;
        createdAt: import("@sinclair/typebox").TString<"date-time">;
        updatedAt: import("@sinclair/typebox").TString<"date-time">;
        serialNo: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        make: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        model: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        locked: import("@sinclair/typebox").TBoolean;
        mambuSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        mambuSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        nuovoSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        nuovoSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        clientId: import("@sinclair/typebox").TInteger;
        client: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TNumber;
            fullName: import("@sinclair/typebox").TString<string>;
            idNumber: import("@sinclair/typebox").TString<string>;
            emailAddress: import("@sinclair/typebox").TString<"email">;
            phoneNumber: import("@sinclair/typebox").TString<string>;
            location: import("@sinclair/typebox").TString<string>;
            status: import("@sinclair/typebox").TNumber;
            createdAt: import("@sinclair/typebox").TString<string>;
            updatedAt: import("@sinclair/typebox").TString<string>;
        }>>;
        nuovoDeviceId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        lockReady: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        lockReadyScheduleAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        lockDateSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        nextLockDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        initialLockDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        lastConnectedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        reminderSet: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        reminderSetDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        scheduleNumber: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    }>>;
    deviceId: import("@sinclair/typebox").TInteger;
    loan: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TNumber;
        accountId: import("@sinclair/typebox").TString<string>;
        firstRepaymentDate: import("@sinclair/typebox").TAny;
        loanName: import("@sinclair/typebox").TString<string>;
        status: import("@sinclair/typebox").TString<string>;
        mambuImei: import("@sinclair/typebox").TString<string>;
        clientId: import("@sinclair/typebox").TInteger;
        client: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TNumber;
            fullName: import("@sinclair/typebox").TString<string>;
            idNumber: import("@sinclair/typebox").TString<string>;
            emailAddress: import("@sinclair/typebox").TString<"email">;
            phoneNumber: import("@sinclair/typebox").TString<string>;
            location: import("@sinclair/typebox").TString<string>;
            status: import("@sinclair/typebox").TNumber;
            createdAt: import("@sinclair/typebox").TString<string>;
            updatedAt: import("@sinclair/typebox").TString<string>;
        }>>;
        createdAt: import("@sinclair/typebox").TString<string>;
        updatedAt: import("@sinclair/typebox").TString<string>;
        retry: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        encodedKey: import("@sinclair/typebox").TString<string>;
        mambuSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        mambuSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<"date-time">>;
        daysRemaining: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        paid: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        paidOff: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        daysToNextInstallment: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    }>>;
    loanId: import("@sinclair/typebox").TInteger;
    createdAt: import("@sinclair/typebox").TString<string>;
    updatedAt: import("@sinclair/typebox").TString<string>;
}>;
export type Reminder = Static<typeof reminderSchema>;
export declare const reminderValidator: import("@feathersjs/schema").Validator<any, any>;
export declare const reminderResolver: import("@feathersjs/schema").Resolver<{
    scheduledAt?: string | undefined;
    type: number;
    message: string;
    id: number;
    device: {
        mambuSynced?: boolean | undefined;
        mambuSyncedAt?: any;
        serialNo?: any;
        make?: any;
        model?: any;
        nuovoSynced?: boolean | undefined;
        nuovoSyncedAt?: any;
        nuovoDeviceId?: any;
        lockReady?: boolean | undefined;
        lockReadyScheduleAt?: any;
        lockDateSynced?: boolean | undefined;
        nextLockDate?: any;
        initialLockDate?: any;
        lastConnectedAt?: any;
        reminderSet?: boolean | undefined;
        reminderSetDate?: any;
        scheduleNumber?: number | undefined;
        id: number;
        status: any;
        client: {
            location: string;
            id: number;
            status: number;
            fullName: string;
            idNumber: string;
            emailAddress: string;
            phoneNumber: string;
            createdAt: string;
            updatedAt: string;
        };
        loan: {
            retry?: number | undefined;
            mambuSynced?: boolean | undefined;
            mambuSyncedAt?: string | undefined;
            daysRemaining?: number | undefined;
            paid?: boolean | undefined;
            paidOff?: boolean | undefined;
            daysToNextInstallment?: number | undefined;
            id: number;
            status: string;
            client: {
                location: string;
                id: number;
                status: number;
                fullName: string;
                idNumber: string;
                emailAddress: string;
                phoneNumber: string;
                createdAt: string;
                updatedAt: string;
            };
            createdAt: string;
            updatedAt: string;
            accountId: string;
            firstRepaymentDate: any;
            loanName: string;
            mambuImei: string;
            clientId: number;
            encodedKey: string;
        };
        imei: string;
        createdAt: string;
        updatedAt: string;
        loanId: number;
        clientId: number;
        locked: boolean;
    };
    loan: {
        retry?: number | undefined;
        mambuSynced?: boolean | undefined;
        mambuSyncedAt?: string | undefined;
        daysRemaining?: number | undefined;
        paid?: boolean | undefined;
        paidOff?: boolean | undefined;
        daysToNextInstallment?: number | undefined;
        id: number;
        status: string;
        client: {
            location: string;
            id: number;
            status: number;
            fullName: string;
            idNumber: string;
            emailAddress: string;
            phoneNumber: string;
            createdAt: string;
            updatedAt: string;
        };
        createdAt: string;
        updatedAt: string;
        accountId: string;
        firstRepaymentDate: any;
        loanName: string;
        mambuImei: string;
        clientId: number;
        encodedKey: string;
    };
    createdAt: string;
    updatedAt: string;
    deviceId: number;
    loanId: number;
    sent: boolean;
}, HookContext>;
export declare const reminderExternalResolver: import("@feathersjs/schema").Resolver<{
    scheduledAt?: string | undefined;
    type: number;
    message: string;
    id: number;
    device: {
        mambuSynced?: boolean | undefined;
        mambuSyncedAt?: any;
        serialNo?: any;
        make?: any;
        model?: any;
        nuovoSynced?: boolean | undefined;
        nuovoSyncedAt?: any;
        nuovoDeviceId?: any;
        lockReady?: boolean | undefined;
        lockReadyScheduleAt?: any;
        lockDateSynced?: boolean | undefined;
        nextLockDate?: any;
        initialLockDate?: any;
        lastConnectedAt?: any;
        reminderSet?: boolean | undefined;
        reminderSetDate?: any;
        scheduleNumber?: number | undefined;
        id: number;
        status: any;
        client: {
            location: string;
            id: number;
            status: number;
            fullName: string;
            idNumber: string;
            emailAddress: string;
            phoneNumber: string;
            createdAt: string;
            updatedAt: string;
        };
        loan: {
            retry?: number | undefined;
            mambuSynced?: boolean | undefined;
            mambuSyncedAt?: string | undefined;
            daysRemaining?: number | undefined;
            paid?: boolean | undefined;
            paidOff?: boolean | undefined;
            daysToNextInstallment?: number | undefined;
            id: number;
            status: string;
            client: {
                location: string;
                id: number;
                status: number;
                fullName: string;
                idNumber: string;
                emailAddress: string;
                phoneNumber: string;
                createdAt: string;
                updatedAt: string;
            };
            createdAt: string;
            updatedAt: string;
            accountId: string;
            firstRepaymentDate: any;
            loanName: string;
            mambuImei: string;
            clientId: number;
            encodedKey: string;
        };
        imei: string;
        createdAt: string;
        updatedAt: string;
        loanId: number;
        clientId: number;
        locked: boolean;
    };
    loan: {
        retry?: number | undefined;
        mambuSynced?: boolean | undefined;
        mambuSyncedAt?: string | undefined;
        daysRemaining?: number | undefined;
        paid?: boolean | undefined;
        paidOff?: boolean | undefined;
        daysToNextInstallment?: number | undefined;
        id: number;
        status: string;
        client: {
            location: string;
            id: number;
            status: number;
            fullName: string;
            idNumber: string;
            emailAddress: string;
            phoneNumber: string;
            createdAt: string;
            updatedAt: string;
        };
        createdAt: string;
        updatedAt: string;
        accountId: string;
        firstRepaymentDate: any;
        loanName: string;
        mambuImei: string;
        clientId: number;
        encodedKey: string;
    };
    createdAt: string;
    updatedAt: string;
    deviceId: number;
    loanId: number;
    sent: boolean;
}, HookContext>;
export declare const reminderDataSchema: import("@sinclair/typebox").TPick<import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TNumber;
    type: import("@sinclair/typebox").TInteger;
    sent: import("@sinclair/typebox").TBoolean;
    message: import("@sinclair/typebox").TString<string>;
    scheduledAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<"date-time">>;
    device: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TNumber;
        imei: import("@sinclair/typebox").TString<string>;
        status: import("@sinclair/typebox").TAny;
        loanId: import("@sinclair/typebox").TInteger;
        loan: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TNumber;
            accountId: import("@sinclair/typebox").TString<string>;
            firstRepaymentDate: import("@sinclair/typebox").TAny;
            loanName: import("@sinclair/typebox").TString<string>;
            status: import("@sinclair/typebox").TString<string>;
            mambuImei: import("@sinclair/typebox").TString<string>;
            clientId: import("@sinclair/typebox").TInteger;
            client: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
                id: import("@sinclair/typebox").TNumber;
                fullName: import("@sinclair/typebox").TString<string>;
                idNumber: import("@sinclair/typebox").TString<string>;
                emailAddress: import("@sinclair/typebox").TString<"email">;
                phoneNumber: import("@sinclair/typebox").TString<string>;
                location: import("@sinclair/typebox").TString<string>;
                status: import("@sinclair/typebox").TNumber;
                createdAt: import("@sinclair/typebox").TString<string>;
                updatedAt: import("@sinclair/typebox").TString<string>;
            }>>;
            createdAt: import("@sinclair/typebox").TString<string>;
            updatedAt: import("@sinclair/typebox").TString<string>;
            retry: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            encodedKey: import("@sinclair/typebox").TString<string>;
            mambuSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            mambuSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<"date-time">>;
            daysRemaining: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            paid: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            paidOff: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            daysToNextInstallment: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        }>>;
        createdAt: import("@sinclair/typebox").TString<"date-time">;
        updatedAt: import("@sinclair/typebox").TString<"date-time">;
        serialNo: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        make: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        model: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        locked: import("@sinclair/typebox").TBoolean;
        mambuSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        mambuSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        nuovoSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        nuovoSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        clientId: import("@sinclair/typebox").TInteger;
        client: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TNumber;
            fullName: import("@sinclair/typebox").TString<string>;
            idNumber: import("@sinclair/typebox").TString<string>;
            emailAddress: import("@sinclair/typebox").TString<"email">;
            phoneNumber: import("@sinclair/typebox").TString<string>;
            location: import("@sinclair/typebox").TString<string>;
            status: import("@sinclair/typebox").TNumber;
            createdAt: import("@sinclair/typebox").TString<string>;
            updatedAt: import("@sinclair/typebox").TString<string>;
        }>>;
        nuovoDeviceId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        lockReady: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        lockReadyScheduleAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        lockDateSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        nextLockDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        initialLockDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        lastConnectedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        reminderSet: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        reminderSetDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        scheduleNumber: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    }>>;
    deviceId: import("@sinclair/typebox").TInteger;
    loan: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TNumber;
        accountId: import("@sinclair/typebox").TString<string>;
        firstRepaymentDate: import("@sinclair/typebox").TAny;
        loanName: import("@sinclair/typebox").TString<string>;
        status: import("@sinclair/typebox").TString<string>;
        mambuImei: import("@sinclair/typebox").TString<string>;
        clientId: import("@sinclair/typebox").TInteger;
        client: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TNumber;
            fullName: import("@sinclair/typebox").TString<string>;
            idNumber: import("@sinclair/typebox").TString<string>;
            emailAddress: import("@sinclair/typebox").TString<"email">;
            phoneNumber: import("@sinclair/typebox").TString<string>;
            location: import("@sinclair/typebox").TString<string>;
            status: import("@sinclair/typebox").TNumber;
            createdAt: import("@sinclair/typebox").TString<string>;
            updatedAt: import("@sinclair/typebox").TString<string>;
        }>>;
        createdAt: import("@sinclair/typebox").TString<string>;
        updatedAt: import("@sinclair/typebox").TString<string>;
        retry: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        encodedKey: import("@sinclair/typebox").TString<string>;
        mambuSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        mambuSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<"date-time">>;
        daysRemaining: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        paid: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        paidOff: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        daysToNextInstallment: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    }>>;
    loanId: import("@sinclair/typebox").TInteger;
    createdAt: import("@sinclair/typebox").TString<string>;
    updatedAt: import("@sinclair/typebox").TString<string>;
}>, ["type", "loanId", "deviceId", "message", "sent"]>;
export type ReminderData = Static<typeof reminderDataSchema>;
export declare const reminderDataValidator: import("@feathersjs/schema").Validator<any, any>;
export declare const reminderDataResolver: import("@feathersjs/schema").Resolver<{
    scheduledAt?: string | undefined;
    type: number;
    message: string;
    id: number;
    device: {
        mambuSynced?: boolean | undefined;
        mambuSyncedAt?: any;
        serialNo?: any;
        make?: any;
        model?: any;
        nuovoSynced?: boolean | undefined;
        nuovoSyncedAt?: any;
        nuovoDeviceId?: any;
        lockReady?: boolean | undefined;
        lockReadyScheduleAt?: any;
        lockDateSynced?: boolean | undefined;
        nextLockDate?: any;
        initialLockDate?: any;
        lastConnectedAt?: any;
        reminderSet?: boolean | undefined;
        reminderSetDate?: any;
        scheduleNumber?: number | undefined;
        id: number;
        status: any;
        client: {
            location: string;
            id: number;
            status: number;
            fullName: string;
            idNumber: string;
            emailAddress: string;
            phoneNumber: string;
            createdAt: string;
            updatedAt: string;
        };
        loan: {
            retry?: number | undefined;
            mambuSynced?: boolean | undefined;
            mambuSyncedAt?: string | undefined;
            daysRemaining?: number | undefined;
            paid?: boolean | undefined;
            paidOff?: boolean | undefined;
            daysToNextInstallment?: number | undefined;
            id: number;
            status: string;
            client: {
                location: string;
                id: number;
                status: number;
                fullName: string;
                idNumber: string;
                emailAddress: string;
                phoneNumber: string;
                createdAt: string;
                updatedAt: string;
            };
            createdAt: string;
            updatedAt: string;
            accountId: string;
            firstRepaymentDate: any;
            loanName: string;
            mambuImei: string;
            clientId: number;
            encodedKey: string;
        };
        imei: string;
        createdAt: string;
        updatedAt: string;
        loanId: number;
        clientId: number;
        locked: boolean;
    };
    loan: {
        retry?: number | undefined;
        mambuSynced?: boolean | undefined;
        mambuSyncedAt?: string | undefined;
        daysRemaining?: number | undefined;
        paid?: boolean | undefined;
        paidOff?: boolean | undefined;
        daysToNextInstallment?: number | undefined;
        id: number;
        status: string;
        client: {
            location: string;
            id: number;
            status: number;
            fullName: string;
            idNumber: string;
            emailAddress: string;
            phoneNumber: string;
            createdAt: string;
            updatedAt: string;
        };
        createdAt: string;
        updatedAt: string;
        accountId: string;
        firstRepaymentDate: any;
        loanName: string;
        mambuImei: string;
        clientId: number;
        encodedKey: string;
    };
    createdAt: string;
    updatedAt: string;
    deviceId: number;
    loanId: number;
    sent: boolean;
}, HookContext>;
export declare const reminderPatchSchema: import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TNumber;
    type: import("@sinclair/typebox").TInteger;
    sent: import("@sinclair/typebox").TBoolean;
    message: import("@sinclair/typebox").TString<string>;
    scheduledAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<"date-time">>;
    device: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TNumber;
        imei: import("@sinclair/typebox").TString<string>;
        status: import("@sinclair/typebox").TAny;
        loanId: import("@sinclair/typebox").TInteger;
        loan: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TNumber;
            accountId: import("@sinclair/typebox").TString<string>;
            firstRepaymentDate: import("@sinclair/typebox").TAny;
            loanName: import("@sinclair/typebox").TString<string>;
            status: import("@sinclair/typebox").TString<string>;
            mambuImei: import("@sinclair/typebox").TString<string>;
            clientId: import("@sinclair/typebox").TInteger;
            client: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
                id: import("@sinclair/typebox").TNumber;
                fullName: import("@sinclair/typebox").TString<string>;
                idNumber: import("@sinclair/typebox").TString<string>;
                emailAddress: import("@sinclair/typebox").TString<"email">;
                phoneNumber: import("@sinclair/typebox").TString<string>;
                location: import("@sinclair/typebox").TString<string>;
                status: import("@sinclair/typebox").TNumber;
                createdAt: import("@sinclair/typebox").TString<string>;
                updatedAt: import("@sinclair/typebox").TString<string>;
            }>>;
            createdAt: import("@sinclair/typebox").TString<string>;
            updatedAt: import("@sinclair/typebox").TString<string>;
            retry: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            encodedKey: import("@sinclair/typebox").TString<string>;
            mambuSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            mambuSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<"date-time">>;
            daysRemaining: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            paid: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            paidOff: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            daysToNextInstallment: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        }>>;
        createdAt: import("@sinclair/typebox").TString<"date-time">;
        updatedAt: import("@sinclair/typebox").TString<"date-time">;
        serialNo: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        make: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        model: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        locked: import("@sinclair/typebox").TBoolean;
        mambuSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        mambuSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        nuovoSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        nuovoSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        clientId: import("@sinclair/typebox").TInteger;
        client: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TNumber;
            fullName: import("@sinclair/typebox").TString<string>;
            idNumber: import("@sinclair/typebox").TString<string>;
            emailAddress: import("@sinclair/typebox").TString<"email">;
            phoneNumber: import("@sinclair/typebox").TString<string>;
            location: import("@sinclair/typebox").TString<string>;
            status: import("@sinclair/typebox").TNumber;
            createdAt: import("@sinclair/typebox").TString<string>;
            updatedAt: import("@sinclair/typebox").TString<string>;
        }>>;
        nuovoDeviceId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        lockReady: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        lockReadyScheduleAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        lockDateSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        nextLockDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        initialLockDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        lastConnectedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        reminderSet: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        reminderSetDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        scheduleNumber: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    }>>;
    deviceId: import("@sinclair/typebox").TInteger;
    loan: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TNumber;
        accountId: import("@sinclair/typebox").TString<string>;
        firstRepaymentDate: import("@sinclair/typebox").TAny;
        loanName: import("@sinclair/typebox").TString<string>;
        status: import("@sinclair/typebox").TString<string>;
        mambuImei: import("@sinclair/typebox").TString<string>;
        clientId: import("@sinclair/typebox").TInteger;
        client: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TNumber;
            fullName: import("@sinclair/typebox").TString<string>;
            idNumber: import("@sinclair/typebox").TString<string>;
            emailAddress: import("@sinclair/typebox").TString<"email">;
            phoneNumber: import("@sinclair/typebox").TString<string>;
            location: import("@sinclair/typebox").TString<string>;
            status: import("@sinclair/typebox").TNumber;
            createdAt: import("@sinclair/typebox").TString<string>;
            updatedAt: import("@sinclair/typebox").TString<string>;
        }>>;
        createdAt: import("@sinclair/typebox").TString<string>;
        updatedAt: import("@sinclair/typebox").TString<string>;
        retry: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        encodedKey: import("@sinclair/typebox").TString<string>;
        mambuSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        mambuSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<"date-time">>;
        daysRemaining: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        paid: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        paidOff: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        daysToNextInstallment: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    }>>;
    loanId: import("@sinclair/typebox").TInteger;
    createdAt: import("@sinclair/typebox").TString<string>;
    updatedAt: import("@sinclair/typebox").TString<string>;
}>>;
export type ReminderPatch = Static<typeof reminderPatchSchema>;
export declare const reminderPatchValidator: import("@feathersjs/schema").Validator<any, any>;
export declare const reminderPatchResolver: import("@feathersjs/schema").Resolver<{
    scheduledAt?: string | undefined;
    type: number;
    message: string;
    id: number;
    device: {
        mambuSynced?: boolean | undefined;
        mambuSyncedAt?: any;
        serialNo?: any;
        make?: any;
        model?: any;
        nuovoSynced?: boolean | undefined;
        nuovoSyncedAt?: any;
        nuovoDeviceId?: any;
        lockReady?: boolean | undefined;
        lockReadyScheduleAt?: any;
        lockDateSynced?: boolean | undefined;
        nextLockDate?: any;
        initialLockDate?: any;
        lastConnectedAt?: any;
        reminderSet?: boolean | undefined;
        reminderSetDate?: any;
        scheduleNumber?: number | undefined;
        id: number;
        status: any;
        client: {
            location: string;
            id: number;
            status: number;
            fullName: string;
            idNumber: string;
            emailAddress: string;
            phoneNumber: string;
            createdAt: string;
            updatedAt: string;
        };
        loan: {
            retry?: number | undefined;
            mambuSynced?: boolean | undefined;
            mambuSyncedAt?: string | undefined;
            daysRemaining?: number | undefined;
            paid?: boolean | undefined;
            paidOff?: boolean | undefined;
            daysToNextInstallment?: number | undefined;
            id: number;
            status: string;
            client: {
                location: string;
                id: number;
                status: number;
                fullName: string;
                idNumber: string;
                emailAddress: string;
                phoneNumber: string;
                createdAt: string;
                updatedAt: string;
            };
            createdAt: string;
            updatedAt: string;
            accountId: string;
            firstRepaymentDate: any;
            loanName: string;
            mambuImei: string;
            clientId: number;
            encodedKey: string;
        };
        imei: string;
        createdAt: string;
        updatedAt: string;
        loanId: number;
        clientId: number;
        locked: boolean;
    };
    loan: {
        retry?: number | undefined;
        mambuSynced?: boolean | undefined;
        mambuSyncedAt?: string | undefined;
        daysRemaining?: number | undefined;
        paid?: boolean | undefined;
        paidOff?: boolean | undefined;
        daysToNextInstallment?: number | undefined;
        id: number;
        status: string;
        client: {
            location: string;
            id: number;
            status: number;
            fullName: string;
            idNumber: string;
            emailAddress: string;
            phoneNumber: string;
            createdAt: string;
            updatedAt: string;
        };
        createdAt: string;
        updatedAt: string;
        accountId: string;
        firstRepaymentDate: any;
        loanName: string;
        mambuImei: string;
        clientId: number;
        encodedKey: string;
    };
    createdAt: string;
    updatedAt: string;
    deviceId: number;
    loanId: number;
    sent: boolean;
}, HookContext>;
export declare const reminderQueryProperties: import("@sinclair/typebox").TPick<import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TNumber;
    type: import("@sinclair/typebox").TInteger;
    sent: import("@sinclair/typebox").TBoolean;
    message: import("@sinclair/typebox").TString<string>;
    scheduledAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<"date-time">>;
    device: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TNumber;
        imei: import("@sinclair/typebox").TString<string>;
        status: import("@sinclair/typebox").TAny;
        loanId: import("@sinclair/typebox").TInteger;
        loan: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TNumber;
            accountId: import("@sinclair/typebox").TString<string>;
            firstRepaymentDate: import("@sinclair/typebox").TAny;
            loanName: import("@sinclair/typebox").TString<string>;
            status: import("@sinclair/typebox").TString<string>;
            mambuImei: import("@sinclair/typebox").TString<string>;
            clientId: import("@sinclair/typebox").TInteger;
            client: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
                id: import("@sinclair/typebox").TNumber;
                fullName: import("@sinclair/typebox").TString<string>;
                idNumber: import("@sinclair/typebox").TString<string>;
                emailAddress: import("@sinclair/typebox").TString<"email">;
                phoneNumber: import("@sinclair/typebox").TString<string>;
                location: import("@sinclair/typebox").TString<string>;
                status: import("@sinclair/typebox").TNumber;
                createdAt: import("@sinclair/typebox").TString<string>;
                updatedAt: import("@sinclair/typebox").TString<string>;
            }>>;
            createdAt: import("@sinclair/typebox").TString<string>;
            updatedAt: import("@sinclair/typebox").TString<string>;
            retry: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            encodedKey: import("@sinclair/typebox").TString<string>;
            mambuSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            mambuSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<"date-time">>;
            daysRemaining: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            paid: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            paidOff: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            daysToNextInstallment: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        }>>;
        createdAt: import("@sinclair/typebox").TString<"date-time">;
        updatedAt: import("@sinclair/typebox").TString<"date-time">;
        serialNo: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        make: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        model: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        locked: import("@sinclair/typebox").TBoolean;
        mambuSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        mambuSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        nuovoSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        nuovoSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        clientId: import("@sinclair/typebox").TInteger;
        client: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TNumber;
            fullName: import("@sinclair/typebox").TString<string>;
            idNumber: import("@sinclair/typebox").TString<string>;
            emailAddress: import("@sinclair/typebox").TString<"email">;
            phoneNumber: import("@sinclair/typebox").TString<string>;
            location: import("@sinclair/typebox").TString<string>;
            status: import("@sinclair/typebox").TNumber;
            createdAt: import("@sinclair/typebox").TString<string>;
            updatedAt: import("@sinclair/typebox").TString<string>;
        }>>;
        nuovoDeviceId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        lockReady: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        lockReadyScheduleAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        lockDateSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        nextLockDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        initialLockDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        lastConnectedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        reminderSet: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        reminderSetDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        scheduleNumber: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    }>>;
    deviceId: import("@sinclair/typebox").TInteger;
    loan: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TNumber;
        accountId: import("@sinclair/typebox").TString<string>;
        firstRepaymentDate: import("@sinclair/typebox").TAny;
        loanName: import("@sinclair/typebox").TString<string>;
        status: import("@sinclair/typebox").TString<string>;
        mambuImei: import("@sinclair/typebox").TString<string>;
        clientId: import("@sinclair/typebox").TInteger;
        client: import("@sinclair/typebox").TRef<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TNumber;
            fullName: import("@sinclair/typebox").TString<string>;
            idNumber: import("@sinclair/typebox").TString<string>;
            emailAddress: import("@sinclair/typebox").TString<"email">;
            phoneNumber: import("@sinclair/typebox").TString<string>;
            location: import("@sinclair/typebox").TString<string>;
            status: import("@sinclair/typebox").TNumber;
            createdAt: import("@sinclair/typebox").TString<string>;
            updatedAt: import("@sinclair/typebox").TString<string>;
        }>>;
        createdAt: import("@sinclair/typebox").TString<string>;
        updatedAt: import("@sinclair/typebox").TString<string>;
        retry: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        encodedKey: import("@sinclair/typebox").TString<string>;
        mambuSynced: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        mambuSyncedAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<"date-time">>;
        daysRemaining: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        paid: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        paidOff: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        daysToNextInstallment: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    }>>;
    loanId: import("@sinclair/typebox").TInteger;
    createdAt: import("@sinclair/typebox").TString<string>;
    updatedAt: import("@sinclair/typebox").TString<string>;
}>, ["id", "type", "sent", "loanId", "createdAt"]>;
export declare const reminderQuerySchema: import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TObject<{
    $limit: import("@sinclair/typebox").TNumber;
    $skip: import("@sinclair/typebox").TNumber;
    $sort: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        createdAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        loanId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
        sent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    }>;
    $select: import("@sinclair/typebox").TUnsafe<("type" | "id" | "createdAt" | "loanId" | "sent")[]>;
    $and: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TInteger, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            $gt: import("@sinclair/typebox").TInteger;
            $gte: import("@sinclair/typebox").TInteger;
            $lt: import("@sinclair/typebox").TInteger;
            $lte: import("@sinclair/typebox").TInteger;
            $ne: import("@sinclair/typebox").TInteger;
            $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
            $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
        }>, import("@sinclair/typebox").TObject<{
            [key: string]: import("@sinclair/typebox").TSchema;
        } | undefined>]>>]>>;
        id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNumber, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            $gt: import("@sinclair/typebox").TNumber;
            $gte: import("@sinclair/typebox").TNumber;
            $lt: import("@sinclair/typebox").TNumber;
            $lte: import("@sinclair/typebox").TNumber;
            $ne: import("@sinclair/typebox").TNumber;
            $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>;
            $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>;
        }>, import("@sinclair/typebox").TObject<{
            [key: string]: import("@sinclair/typebox").TSchema;
        } | undefined>]>>]>>;
        createdAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            $gt: import("@sinclair/typebox").TString<string>;
            $gte: import("@sinclair/typebox").TString<string>;
            $lt: import("@sinclair/typebox").TString<string>;
            $lte: import("@sinclair/typebox").TString<string>;
            $ne: import("@sinclair/typebox").TString<string>;
            $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>;
            $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>;
        }>, import("@sinclair/typebox").TObject<{
            [key: string]: import("@sinclair/typebox").TSchema;
        } | undefined>]>>]>>;
        loanId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TInteger, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            $gt: import("@sinclair/typebox").TInteger;
            $gte: import("@sinclair/typebox").TInteger;
            $lt: import("@sinclair/typebox").TInteger;
            $lte: import("@sinclair/typebox").TInteger;
            $ne: import("@sinclair/typebox").TInteger;
            $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
            $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
        }>, import("@sinclair/typebox").TObject<{
            [key: string]: import("@sinclair/typebox").TSchema;
        } | undefined>]>>]>>;
        sent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            $gt: import("@sinclair/typebox").TBoolean;
            $gte: import("@sinclair/typebox").TBoolean;
            $lt: import("@sinclair/typebox").TBoolean;
            $lte: import("@sinclair/typebox").TBoolean;
            $ne: import("@sinclair/typebox").TBoolean;
            $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TBoolean>;
            $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TBoolean>;
        }>, import("@sinclair/typebox").TObject<{
            [key: string]: import("@sinclair/typebox").TSchema;
        } | undefined>]>>]>>;
    }>>, import("@sinclair/typebox").TObject<{
        $or: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TInteger, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
                $gt: import("@sinclair/typebox").TInteger;
                $gte: import("@sinclair/typebox").TInteger;
                $lt: import("@sinclair/typebox").TInteger;
                $lte: import("@sinclair/typebox").TInteger;
                $ne: import("@sinclair/typebox").TInteger;
                $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
                $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
            }>, import("@sinclair/typebox").TObject<{
                [key: string]: import("@sinclair/typebox").TSchema;
            } | undefined>]>>]>>;
            id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNumber, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
                $gt: import("@sinclair/typebox").TNumber;
                $gte: import("@sinclair/typebox").TNumber;
                $lt: import("@sinclair/typebox").TNumber;
                $lte: import("@sinclair/typebox").TNumber;
                $ne: import("@sinclair/typebox").TNumber;
                $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>;
                $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>;
            }>, import("@sinclair/typebox").TObject<{
                [key: string]: import("@sinclair/typebox").TSchema;
            } | undefined>]>>]>>;
            createdAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
                $gt: import("@sinclair/typebox").TString<string>;
                $gte: import("@sinclair/typebox").TString<string>;
                $lt: import("@sinclair/typebox").TString<string>;
                $lte: import("@sinclair/typebox").TString<string>;
                $ne: import("@sinclair/typebox").TString<string>;
                $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>;
                $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>;
            }>, import("@sinclair/typebox").TObject<{
                [key: string]: import("@sinclair/typebox").TSchema;
            } | undefined>]>>]>>;
            loanId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TInteger, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
                $gt: import("@sinclair/typebox").TInteger;
                $gte: import("@sinclair/typebox").TInteger;
                $lt: import("@sinclair/typebox").TInteger;
                $lte: import("@sinclair/typebox").TInteger;
                $ne: import("@sinclair/typebox").TInteger;
                $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
                $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
            }>, import("@sinclair/typebox").TObject<{
                [key: string]: import("@sinclair/typebox").TSchema;
            } | undefined>]>>]>>;
            sent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
                $gt: import("@sinclair/typebox").TBoolean;
                $gte: import("@sinclair/typebox").TBoolean;
                $lt: import("@sinclair/typebox").TBoolean;
                $lte: import("@sinclair/typebox").TBoolean;
                $ne: import("@sinclair/typebox").TBoolean;
                $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TBoolean>;
                $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TBoolean>;
            }>, import("@sinclair/typebox").TObject<{
                [key: string]: import("@sinclair/typebox").TSchema;
            } | undefined>]>>]>>;
        }>>>;
    }>]>>;
    $or: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TInteger, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            $gt: import("@sinclair/typebox").TInteger;
            $gte: import("@sinclair/typebox").TInteger;
            $lt: import("@sinclair/typebox").TInteger;
            $lte: import("@sinclair/typebox").TInteger;
            $ne: import("@sinclair/typebox").TInteger;
            $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
            $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
        }>, import("@sinclair/typebox").TObject<{
            [key: string]: import("@sinclair/typebox").TSchema;
        } | undefined>]>>]>>;
        id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNumber, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            $gt: import("@sinclair/typebox").TNumber;
            $gte: import("@sinclair/typebox").TNumber;
            $lt: import("@sinclair/typebox").TNumber;
            $lte: import("@sinclair/typebox").TNumber;
            $ne: import("@sinclair/typebox").TNumber;
            $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>;
            $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>;
        }>, import("@sinclair/typebox").TObject<{
            [key: string]: import("@sinclair/typebox").TSchema;
        } | undefined>]>>]>>;
        createdAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            $gt: import("@sinclair/typebox").TString<string>;
            $gte: import("@sinclair/typebox").TString<string>;
            $lt: import("@sinclair/typebox").TString<string>;
            $lte: import("@sinclair/typebox").TString<string>;
            $ne: import("@sinclair/typebox").TString<string>;
            $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>;
            $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>;
        }>, import("@sinclair/typebox").TObject<{
            [key: string]: import("@sinclair/typebox").TSchema;
        } | undefined>]>>]>>;
        loanId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TInteger, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            $gt: import("@sinclair/typebox").TInteger;
            $gte: import("@sinclair/typebox").TInteger;
            $lt: import("@sinclair/typebox").TInteger;
            $lte: import("@sinclair/typebox").TInteger;
            $ne: import("@sinclair/typebox").TInteger;
            $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
            $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
        }>, import("@sinclair/typebox").TObject<{
            [key: string]: import("@sinclair/typebox").TSchema;
        } | undefined>]>>]>>;
        sent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            $gt: import("@sinclair/typebox").TBoolean;
            $gte: import("@sinclair/typebox").TBoolean;
            $lt: import("@sinclair/typebox").TBoolean;
            $lte: import("@sinclair/typebox").TBoolean;
            $ne: import("@sinclair/typebox").TBoolean;
            $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TBoolean>;
            $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TBoolean>;
        }>, import("@sinclair/typebox").TObject<{
            [key: string]: import("@sinclair/typebox").TSchema;
        } | undefined>]>>]>>;
    }>>>;
}>>, import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TInteger, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
        $gt: import("@sinclair/typebox").TInteger;
        $gte: import("@sinclair/typebox").TInteger;
        $lt: import("@sinclair/typebox").TInteger;
        $lte: import("@sinclair/typebox").TInteger;
        $ne: import("@sinclair/typebox").TInteger;
        $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
        $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
    }>, import("@sinclair/typebox").TObject<{
        [key: string]: import("@sinclair/typebox").TSchema;
    } | undefined>]>>]>>;
    id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TNumber, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
        $gt: import("@sinclair/typebox").TNumber;
        $gte: import("@sinclair/typebox").TNumber;
        $lt: import("@sinclair/typebox").TNumber;
        $lte: import("@sinclair/typebox").TNumber;
        $ne: import("@sinclair/typebox").TNumber;
        $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>;
        $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>;
    }>, import("@sinclair/typebox").TObject<{
        [key: string]: import("@sinclair/typebox").TSchema;
    } | undefined>]>>]>>;
    createdAt: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
        $gt: import("@sinclair/typebox").TString<string>;
        $gte: import("@sinclair/typebox").TString<string>;
        $lt: import("@sinclair/typebox").TString<string>;
        $lte: import("@sinclair/typebox").TString<string>;
        $ne: import("@sinclair/typebox").TString<string>;
        $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>;
        $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>;
    }>, import("@sinclair/typebox").TObject<{
        [key: string]: import("@sinclair/typebox").TSchema;
    } | undefined>]>>]>>;
    loanId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TInteger, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
        $gt: import("@sinclair/typebox").TInteger;
        $gte: import("@sinclair/typebox").TInteger;
        $lt: import("@sinclair/typebox").TInteger;
        $lte: import("@sinclair/typebox").TInteger;
        $ne: import("@sinclair/typebox").TInteger;
        $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
        $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TInteger>;
    }>, import("@sinclair/typebox").TObject<{
        [key: string]: import("@sinclair/typebox").TSchema;
    } | undefined>]>>]>>;
    sent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TPartial<import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
        $gt: import("@sinclair/typebox").TBoolean;
        $gte: import("@sinclair/typebox").TBoolean;
        $lt: import("@sinclair/typebox").TBoolean;
        $lte: import("@sinclair/typebox").TBoolean;
        $ne: import("@sinclair/typebox").TBoolean;
        $in: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TBoolean>;
        $nin: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TBoolean>;
    }>, import("@sinclair/typebox").TObject<{
        [key: string]: import("@sinclair/typebox").TSchema;
    } | undefined>]>>]>>;
}>>]>, import("@sinclair/typebox").TObject<{}>]>;
export declare const reminderResultResolver: import("@feathersjs/schema").Resolver<{
    scheduledAt?: string | undefined;
    type: number;
    message: string;
    id: number;
    device: {
        mambuSynced?: boolean | undefined;
        mambuSyncedAt?: any;
        serialNo?: any;
        make?: any;
        model?: any;
        nuovoSynced?: boolean | undefined;
        nuovoSyncedAt?: any;
        nuovoDeviceId?: any;
        lockReady?: boolean | undefined;
        lockReadyScheduleAt?: any;
        lockDateSynced?: boolean | undefined;
        nextLockDate?: any;
        initialLockDate?: any;
        lastConnectedAt?: any;
        reminderSet?: boolean | undefined;
        reminderSetDate?: any;
        scheduleNumber?: number | undefined;
        id: number;
        status: any;
        client: {
            location: string;
            id: number;
            status: number;
            fullName: string;
            idNumber: string;
            emailAddress: string;
            phoneNumber: string;
            createdAt: string;
            updatedAt: string;
        };
        loan: {
            retry?: number | undefined;
            mambuSynced?: boolean | undefined;
            mambuSyncedAt?: string | undefined;
            daysRemaining?: number | undefined;
            paid?: boolean | undefined;
            paidOff?: boolean | undefined;
            daysToNextInstallment?: number | undefined;
            id: number;
            status: string;
            client: {
                location: string;
                id: number;
                status: number;
                fullName: string;
                idNumber: string;
                emailAddress: string;
                phoneNumber: string;
                createdAt: string;
                updatedAt: string;
            };
            createdAt: string;
            updatedAt: string;
            accountId: string;
            firstRepaymentDate: any;
            loanName: string;
            mambuImei: string;
            clientId: number;
            encodedKey: string;
        };
        imei: string;
        createdAt: string;
        updatedAt: string;
        loanId: number;
        clientId: number;
        locked: boolean;
    };
    loan: {
        retry?: number | undefined;
        mambuSynced?: boolean | undefined;
        mambuSyncedAt?: string | undefined;
        daysRemaining?: number | undefined;
        paid?: boolean | undefined;
        paidOff?: boolean | undefined;
        daysToNextInstallment?: number | undefined;
        id: number;
        status: string;
        client: {
            location: string;
            id: number;
            status: number;
            fullName: string;
            idNumber: string;
            emailAddress: string;
            phoneNumber: string;
            createdAt: string;
            updatedAt: string;
        };
        createdAt: string;
        updatedAt: string;
        accountId: string;
        firstRepaymentDate: any;
        loanName: string;
        mambuImei: string;
        clientId: number;
        encodedKey: string;
    };
    createdAt: string;
    updatedAt: string;
    deviceId: number;
    loanId: number;
    sent: boolean;
}, HookContext>;
export type ReminderQuery = Static<typeof reminderQuerySchema>;
export declare const reminderQueryValidator: import("@feathersjs/schema").Validator<any, any>;
export declare const reminderQueryResolver: import("@feathersjs/schema").Resolver<Partial<{
    $limit: number;
    $skip: number;
    $sort: {
        type?: number | undefined;
        id?: number | undefined;
        createdAt?: number | undefined;
        loanId?: number | undefined;
        sent?: number | undefined;
    };
    $select: ("type" | "id" | "createdAt" | "loanId" | "sent")[];
    $and: ({
        type?: number | Partial<{
            $gt: number;
            $gte: number;
            $lt: number;
            $lte: number;
            $ne: number;
            $in: number[];
            $nin: number[];
        } & {}> | undefined;
        id?: number | Partial<{
            $gt: number;
            $gte: number;
            $lt: number;
            $lte: number;
            $ne: number;
            $in: number[];
            $nin: number[];
        } & {}> | undefined;
        createdAt?: string | Partial<{
            $gt: string;
            $gte: string;
            $lt: string;
            $lte: string;
            $ne: string;
            $in: string[];
            $nin: string[];
        } & {}> | undefined;
        loanId?: number | Partial<{
            $gt: number;
            $gte: number;
            $lt: number;
            $lte: number;
            $ne: number;
            $in: number[];
            $nin: number[];
        } & {}> | undefined;
        sent?: boolean | Partial<{
            $gt: boolean;
            $gte: boolean;
            $lt: boolean;
            $lte: boolean;
            $ne: boolean;
            $in: boolean[];
            $nin: boolean[];
        } & {}> | undefined;
    } | {
        $or: {
            type?: number | Partial<{
                $gt: number;
                $gte: number;
                $lt: number;
                $lte: number;
                $ne: number;
                $in: number[];
                $nin: number[];
            } & {}> | undefined;
            id?: number | Partial<{
                $gt: number;
                $gte: number;
                $lt: number;
                $lte: number;
                $ne: number;
                $in: number[];
                $nin: number[];
            } & {}> | undefined;
            createdAt?: string | Partial<{
                $gt: string;
                $gte: string;
                $lt: string;
                $lte: string;
                $ne: string;
                $in: string[];
                $nin: string[];
            } & {}> | undefined;
            loanId?: number | Partial<{
                $gt: number;
                $gte: number;
                $lt: number;
                $lte: number;
                $ne: number;
                $in: number[];
                $nin: number[];
            } & {}> | undefined;
            sent?: boolean | Partial<{
                $gt: boolean;
                $gte: boolean;
                $lt: boolean;
                $lte: boolean;
                $ne: boolean;
                $in: boolean[];
                $nin: boolean[];
            } & {}> | undefined;
        }[];
    })[];
    $or: {
        type?: number | Partial<{
            $gt: number;
            $gte: number;
            $lt: number;
            $lte: number;
            $ne: number;
            $in: number[];
            $nin: number[];
        } & {}> | undefined;
        id?: number | Partial<{
            $gt: number;
            $gte: number;
            $lt: number;
            $lte: number;
            $ne: number;
            $in: number[];
            $nin: number[];
        } & {}> | undefined;
        createdAt?: string | Partial<{
            $gt: string;
            $gte: string;
            $lt: string;
            $lte: string;
            $ne: string;
            $in: string[];
            $nin: string[];
        } & {}> | undefined;
        loanId?: number | Partial<{
            $gt: number;
            $gte: number;
            $lt: number;
            $lte: number;
            $ne: number;
            $in: number[];
            $nin: number[];
        } & {}> | undefined;
        sent?: boolean | Partial<{
            $gt: boolean;
            $gte: boolean;
            $lt: boolean;
            $lte: boolean;
            $ne: boolean;
            $in: boolean[];
            $nin: boolean[];
        } & {}> | undefined;
    }[];
}> & {
    type?: number | Partial<{
        $gt: number;
        $gte: number;
        $lt: number;
        $lte: number;
        $ne: number;
        $in: number[];
        $nin: number[];
    } & {}> | undefined;
    id?: number | Partial<{
        $gt: number;
        $gte: number;
        $lt: number;
        $lte: number;
        $ne: number;
        $in: number[];
        $nin: number[];
    } & {}> | undefined;
    createdAt?: string | Partial<{
        $gt: string;
        $gte: string;
        $lt: string;
        $lte: string;
        $ne: string;
        $in: string[];
        $nin: string[];
    } & {}> | undefined;
    loanId?: number | Partial<{
        $gt: number;
        $gte: number;
        $lt: number;
        $lte: number;
        $ne: number;
        $in: number[];
        $nin: number[];
    } & {}> | undefined;
    sent?: boolean | Partial<{
        $gt: boolean;
        $gte: boolean;
        $lt: boolean;
        $lte: boolean;
        $ne: boolean;
        $in: boolean[];
        $nin: boolean[];
    } & {}> | undefined;
} & {}, HookContext>;
